JPA全称： Java Persistence API

    JPA的宗旨是为POJO提供持久化标准规范，能够脱离容器独立运行，很方便开发和测试。
    JPA通过JDK 5.0注解或XML描述对象－关系表的映射关系，并将运行期的实体对象持久化到数据库中。


JPA技术：

    1.ORM映射元数据：
        JPA支持XML和JDK 5.0注解两种元数据的形式，元数据描述对象和表之间的映射关系，框架据此将实体对象持久化到数据库表中

    2.JPA的API：
        用来操作实体对象，执行CRUD操作，框架在后台替我们完成所有的事情，开发者从繁琐的JDBC和SQL代码中解脱出来

    3.查询语言：
        通过面向对象而非面向数据库的查询语言查询数据，避免程序的SQL语句紧密耦合

-------------------------------------------------------------------------------------------------------------

ORM 是Object-Relation-Mapping，即对象关系影射技术，是对象持久化的核心。

    1.标准化
        JPA 是 JCP 组织发布的 Java EE 标准之一，因此任何声称符合 JPA 标准的框架都遵循同样的架构，提供相同的访问 API
        这保证了基于JPA开发的企业应用能够经过少量的修改就能够在不同的JPA框架下运行。

    2.对容器级特性的支持
        JPA 框架中支持大数据集、事务、并发等容器级事务，这使得 JPA 超越了简单持久化框架的局限，在企业应用发挥更大的作用。

    3.简单易用，集成方便
        JPA的主要目标之一就是提供更加简单的编程模型：在JPA框架下创建实体和创建Java 类一样简单，没有任何的约束和限制，
        只需要使用 javax.persistence.Entity进行注释

    4.可媲美JDBC的查询能力
        JPA的查询语言是面向对象而非面向数据库的，它以面向对象的自然语法构造查询语句，可以看成是Hibernate HQL的等价物。
        JPA定义了独特的JPQL（Java Persistence Query Language），
        JPQL是EJB QL的一种扩展，它是针对实体的一种查询语言，操作对象是实体，而不是关系数据库的表，
        而且能够支持批量更新和修改、JOIN、GROUP BY、HAVING 等通常只有 SQL 才能够提供的高级查询特性，甚至还能够支持子查询。

    5.支持面向对象的高级特性
        JPA 中能够支持面向对象的高级特性，如类之间的继承、多态和类之间的复杂关系，
        这样的支持能够让开发者最大限度的使用面向对象的模型设计企业应用，而不需要自行处理这些特性在关系数据库的持久化。